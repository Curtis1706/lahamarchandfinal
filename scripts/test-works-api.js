console.log("üß™ Test - API Works apr√®s correction");
console.log("===================================");

async function testWorksAPI() {
  console.log("\nüîç Test de l'API /api/works");

  try {
    const response = await fetch('http://localhost:3000/api/works', {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json',
      }
    });

    const result = await response.json();

    console.log("\nüìä R√©sultat:");
    console.log("   Status:", response.status);
    console.log("   Type de r√©ponse:", typeof result);
    console.log("   Nombre d'≈ìuvres:", Array.isArray(result) ? result.length : "Erreur");

    if (response.ok) {
      console.log("\n‚úÖ SUCC√àS ! L'API fonctionne correctement");
      
      if (Array.isArray(result) && result.length === 0) {
        console.log("\nüìù Aucune ≈ìuvre trouv√©e (normal apr√®s reset)");
        console.log("   Vous pouvez maintenant cr√©er des ≈ìuvres via l'interface");
      } else if (Array.isArray(result)) {
        console.log(`\nüìö ${result.length} ≈ìuvre(s) trouv√©e(s):`);
        result.forEach((work, index) => {
          console.log(`   ${index + 1}. "${work.title}"`);
          console.log(`      ‚Ä¢ Auteur: ${work.author?.name || "Non d√©fini"}`);
          console.log(`      ‚Ä¢ Discipline: ${work.discipline?.name || "Non d√©finie"}`);
          console.log(`      ‚Ä¢ Statut: ${work.status}`);
        });
      }
    } else {
      console.log("\n‚ùå √âCHEC !");
      console.log("   Erreur:", result.error || "Erreur inconnue");
      
      if (result.error && result.error.includes("concepteur")) {
        console.log("\nüîß Erreur li√©e au champ 'concepteur' d√©tect√©e");
        console.log("   V√©rifiez que toutes les r√©f√©rences ont √©t√© supprim√©es");
      }
    }

  } catch (error) {
    console.error("\n‚ùå Erreur r√©seau:", error.message);
    console.log("\nüí° V√©rifications:");
    console.log("   1. Le serveur est-il d√©marr√© ? (npm run dev)");
    console.log("   2. L'API est-elle accessible ?");
    console.log("   3. Y a-t-il des erreurs dans la console ?");
  }
}

console.log("\n‚ö†Ô∏è PR√âREQUIS:");
console.log("   Le serveur doit √™tre d√©marr√© (npm run dev)");
console.log("   L'API /api/works doit √™tre accessible");

console.log("\nüéØ OBJECTIF:");
console.log("   V√©rifier que l'API works fonctionne apr√®s correction du sch√©ma");

testWorksAPI().catch(console.error);
