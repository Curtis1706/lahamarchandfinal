// Script pour v√©rifier les donn√©es existantes
const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function checkData() {
  try {
    console.log('üîç Checking existing data...')

    // V√©rifier les utilisateurs
    const users = await prisma.user.findMany({
      select: {
        id: true,
        name: true,
        email: true,
        role: true
      }
    })
    console.log('üë• Users found:', users.length)
    users.forEach(user => {
      console.log(`   - ${user.name} (${user.email}) - ${user.role}`)
    })

    // V√©rifier les disciplines
    const disciplines = await prisma.discipline.findMany({
      select: {
        id: true,
        name: true
      }
    })
    console.log('üìö Disciplines found:', disciplines.length)
    disciplines.forEach(discipline => {
      console.log(`   - ${discipline.name} (${discipline.id})`)
    })

    // V√©rifier les ≈ìuvres existantes
    const works = await prisma.work.findMany({
      select: {
        id: true,
        title: true,
        concepteurId: true,
        status: true
      }
    })
    console.log('üìñ Works found:', works.length)
    works.forEach(work => {
      console.log(`   - ${work.title} (${work.status})`)
    })

    // V√©rifier sp√©cifiquement le concepteur
    const concepteur = await prisma.user.findUnique({
      where: { email: 'concepteur@test.com' }
    })
    
    if (concepteur) {
      console.log('‚úÖ Concepteur found:', concepteur.name)
    } else {
      console.log('‚ùå Concepteur not found!')
    }

  } catch (error) {
    console.error('‚ùå Error checking data:', error)
  } finally {
    await prisma.$disconnect()
  }
}

checkData()


